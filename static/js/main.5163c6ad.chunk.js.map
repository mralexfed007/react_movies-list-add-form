{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","newFilmHandler","Object","keys","length","props","addMovie","setState","handleError","event","target","name","value","urlValid","includes","test","validator","toUpperCase","slice","hasOwnProperty","call","updateErrors","isButtonHidden","handleChange","this","onSubmit","e","preventDefault","type","placeholder","onChange","required","onBlur","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5163c6ad.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imdbUrl: '',\n    imgUrl: '',\n    imdbId: '',\n    errors: {},\n  };\n\n  newFilmHandler = () => {\n    const {\n      title, description, imdbUrl, imdbId, imgUrl, errors,\n    } = this.state;\n\n    if (!Object.keys(errors).length) {\n      this.props.addMovie({\n        title,\n        description,\n        imdbUrl,\n        imgUrl,\n        imdbId,\n      });\n      this.setState({\n        title: '',\n        description: '',\n        imdbUrl: '',\n        imgUrl: '',\n        imdbId: '',\n        errors: {},\n      });\n    }\n  }\n\n  handleError = (event) => {\n    // eslint-disable-next-line max-len\n    const regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const { name, value } = event.target;\n    const urlValid = (name.includes('Url'))\n      ? regExp.test(value)\n      : true;\n    const validator = `is${name[0].toUpperCase() + name.slice(1)}Valid`;\n\n    if (!Object.hasOwnProperty.call(this.state.errors, validator)\n    && (value === '' || !urlValid)) {\n      this.setState((state) => {\n        return {\n          errors: {\n            ...state.errors,\n            [validator]: true,\n          },\n        };\n      });\n    } else if (Object.hasOwnProperty.call(this.state.errors, validator)\n    && value !== '' && urlValid) {\n      this.setState((state) => {\n        const updateErrors = state.errors;\n\n        delete updateErrors[validator];\n\n        return {\n          errors: updateErrors,\n        };\n      });\n    }\n\n    this.setState(state => ({\n      isButtonHidden: Object.keys(state.errors).length,\n    }));\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      title, description, imdbId, imdbUrl, imgUrl, isButtonHidden, errors,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          this.newFilmHandler();\n        }}\n      >\n        <fieldset className=\"formField\">\n          <legend>Add new Film</legend>\n          <label>\n            Title\n            <input\n              className={Object.hasOwnProperty.call(errors, 'isTitleValid')\n                ? 'warning'\n                : ''}\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Film title\"\n              value={title}\n              onChange={this.handleChange}\n              required\n              onBlur={this.handleError}\n            />\n            {Object.hasOwnProperty.call(errors, 'isTitleValid')\n            && <span>Enter title, please</span>}\n          </label>\n          <label>\n            Description\n            <input\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Film description\"\n              value={description}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Imdb Id\n            <input\n              className={Object.hasOwnProperty.call(errors, 'isImdbIdValid')\n                ? 'warning'\n                : ''}\n              type=\"text\"\n              name=\"imdbId\"\n              placeholder=\"ImdbId\"\n              value={imdbId}\n              onChange={this.handleChange}\n              onBlur={this.handleError}\n              required\n            />\n            {Object.hasOwnProperty.call(errors, 'isImdbIdValid')\n            && <span>Enter valid Id, please</span>}\n          </label>\n          <label>\n            Imdb Url\n            <input\n              className={Object.hasOwnProperty.call(errors, 'isImdbUrlValid')\n                ? 'warning'\n                : ''}\n              type=\"text\"\n              name=\"imdbUrl\"\n              placeholder=\"ImdbUrl\"\n              value={imdbUrl}\n              onChange={this.handleChange}\n              onBlur={this.handleError}\n              required\n            />\n            {Object.hasOwnProperty.call(errors, 'isImdbUrlValid')\n            && <span>Enter valid Imdb Url, please</span>}\n          </label>\n          <label>\n            Img Url\n            <input\n              className={Object.hasOwnProperty.call(errors, 'isImgUrlValid')\n                ? 'warning'\n                : ''}\n              type=\"text\"\n              name=\"imgUrl\"\n              placeholder=\"ImgUrl\"\n              value={imgUrl}\n              onChange={this.handleChange}\n              onBlur={this.handleError}\n              required\n            />\n            {Object.hasOwnProperty.call(errors, 'isImgUrlValid')\n            && <span>Enter valid Id, please</span>}\n          </label>\n\n        </fieldset>\n        <button\n          type=\"submit\"\n          disabled={isButtonHidden}\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return { movies: [...state.movies, movie] };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}